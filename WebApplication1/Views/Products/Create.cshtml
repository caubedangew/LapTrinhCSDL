@model WebApplication1.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    function chooseImage(fileImage) {
        if (fileImage.files) {
            for (var i = 0; i < fileImage.files.length; i++) {
                var imageShow = `<img src="" id="image${i + 1}" width="100" height="100"/>`
                document.querySelector(".form-group:nth-child(8) > div:last-child > input").insertAdjacentHTML("beforebegin", imageShow);

                var reader = new FileReader();
                reader.onload = function (e) {
                    $(`#image${i + 1}`).attr("src", e.target.result);
                };

                reader.readAsDataURL(fileImage.files[i]);
            }
            
        }
    }
</script>

<h2 class="text-center" style="padding-top: 5rem;">Add products</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TypeOfPhone, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeOfPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="FirmId">Firm</label>
            <select class="form-select" id="FirmId" name="FirmId" value="">
                @foreach (var f in ViewBag.Firms)
                {
                    <option value="@f.Id">@f.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="image">Image</label>
            <div>
                <input type="file" id="imageFile" accept="image/*"
                       onchange="chooseImage(this)" name="image" multiple required/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary mt-1" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
